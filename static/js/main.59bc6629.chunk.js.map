{"version":3,"sources":["App.styled.js","components/Section/Section.styled.js","components/Section/Section.js","redux/contacts-actions.js","redux/contacts-operations.js","redux/contacts-selectors/ContactForm-selectors.js","components/ContactForm/ContactForm.styled.js","components/Button/Button.styled.js","components/ContactForm/ContactForm.js","redux/contacts-selectors/ContactList-Filter-selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","App.js","redux/contacts-reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["MainTitle","styled","h1","MinorTitle","h2","Section","title","children","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","getItems","state","contacts","items","Form","form","Label","label","Input","input","Button","button","SubmitForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleInputChange","event","target","value","reset","onSubmit","preventDefault","some","item","toast","error","a","contact","post","data","addContact","htmlFor","type","onChange","pattern","required","getFilter","filter","getLoading","loading","gotError","getFilteredContacts","createSelector","allContacts","normilizedFilter","toLowerCase","record","includes","List","ul","ListItem","li","ContactList","onDeleteContact","id","contactId","delete","useEffect","get","map","onClick","FilterLabel","FilterInput","Filter","LoaderContainer","div","ReactLoader","color","height","width","timeout","CreateApp","isLoading","hasError","autoClose","Loader","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59bc6629.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainTitle = styled.h1`\n  font-weight: 700;\n  font-size: 32px;\n  text-align: center;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n`;\n","import styled from '@emotion/styled';\n\nexport const MinorTitle = styled.h2`\n  margin: 0;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 26px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MinorTitle } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <MinorTitle>{title}</MinorTitle>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContact = createAction('contacts/filter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nexport const addContact = (name, number) => async dispatch => {\n  const contact = {\n    name: name,\n    number: number,\n  };\n  dispatch(addContactRequest());\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\nexport const deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactRequest());\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n","export const getItems = state => state.contacts.items;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  font-size: 18px;\n  margin: 10px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  margin-left: 10px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  width: auto;\n  height: 40px;\n  font-weight: normal;\n  font-size: 16px;\n  margin: 20px;\n  padding: 10px 20px;\n  color: #fff;\n  background-color: dodgerblue;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 5px;\n  border: none;\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(39, 24, 245);\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts-operations';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { getItems } from 'redux/contacts-selectors/ContactForm-selectors';\nimport { Form, Label, Input } from './ContactForm.styled';\nimport { Button } from 'components/Button/Button.styled';\n\nexport default function SubmitForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (items.some(item => item.name === name)) {\n      toast.error(`${name} is already in contacts`);\n      reset();\n      return;\n    } else {\n      dispatch(addContact(name, number));\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например, Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label htmlFor=\"number\">\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.loading;\nexport const gotError = state => state.contacts.error;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (allContacts, filter) => {\n    const normilizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(record =>\n      record.name.toLowerCase().includes(normilizedFilter),\n    );\n  },\n);\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 15px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-basis: 1/3;\n  width: 30%;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px 20px;\n  font-weight: 500;\n  font-size: 18px;\n`;\n","import React, { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from 'redux/contacts-operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getFilteredContacts } from 'redux/contacts-selectors/ContactList-Filter-selectors';\nimport { List, ListItem } from 'components/ContactList/ContactList.styled';\nimport { Button } from 'components/Button/Button.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          {name}: {number}\n          <Button type=\"button\" onClick={() => onDeleteContact(id)}>\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-weight: 400;\n  font-size: 18px;\n  margin-top: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  margin-top: 10px;\n  padding: 4px;\n`;\n","import React from 'react';\nimport { filterContact } from 'redux/contacts-actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getFilter } from 'redux/contacts-selectors/ContactList-Filter-selectors';\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FilterLabel>\n      Find contacts by name{' '}\n      <FilterInput\n        type=\"text\"\n        value={value}\n        onChange={event => dispatch(filterContact(event.target.value))}\n      />\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const LoaderContainer = styled.div`\n  position: fixed;\n  top: 97%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nfunction ReactLoader() {\n  return (\n    <LoaderContainer>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        timeout={5000}\n      />\n    </LoaderContainer>\n  );\n}\n\nexport default ReactLoader;\n","import { useSelector } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { MainTitle } from './App.styled';\nimport Section from 'components/Section/Section';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport {\n  getLoading,\n  gotError,\n} from 'redux/contacts-selectors/ContactList-Filter-selectors';\n\nexport default function CreateApp() {\n  const isLoading = useSelector(getLoading);\n  const hasError = useSelector(gotError);\n  return (\n    <>\n      <MainTitle>Phonebook</MainTitle>\n      <ContactForm />\n      <Section title=\"Contacts\">\n        <Filter />\n        {hasError &&\n          toast.error(\n            `We are sorry, but something went wrong. Please, try again later.`,\n          )}\n        <ContactList />\n      </Section>\n      <ToastContainer autoClose={3000} />\n      {isLoading && <Loader />}\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from './contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store } from 'redux/store';\nimport { Provider } from 'react-redux';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}